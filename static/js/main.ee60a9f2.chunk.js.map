{"version":3,"sources":["views/Header.jsx","views/Footer.jsx","views/Home.jsx","router.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","type","React","Component","href","Footer","path","component","Home","from","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4WAIqBA,E,iLAIb,OACI,yBAAKC,UAAU,UAEX,yBAAKA,UAAU,QACX,qCAGJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAG,SAAT,iBAEJ,yBAAKD,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAG,QAAT,iBAEJ,yBAAKD,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAG,YAAT,iBAEJ,yBAAKD,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAG,UAAT,kBAKR,yBAAKD,UAAU,mBACX,yBAAKA,UAAU,UACX,2BAAOE,KAAK,SACZ,uBAAGF,UAAU,gC,GA9BDG,IAAMC,WCA3B,aACX,OACI,yBAAKJ,UAAU,UACX,0BAAMA,UAAU,WACZ,uBAAGK,KAAK,iCAAR,sCCHD,G,MAAA,WAEX,OACI,yBAAKL,UAAU,QACX,kBAAC,EAAD,MACA,6BAASA,UAAU,gBAEf,yBAAKA,UAAU,SACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,2BAGjB,uBAAGA,UAAU,QAAb,oDAA6B,uBAAGA,UAAU,wBAC1C,uBAAGA,UAAU,QAAb,8CAA4B,uBAAGA,UAAU,wBACzC,uBAAGA,UAAU,QAAb,oBAAwB,uBAAGA,UAAU,wBACrC,yBAAKA,UAAU,cACX,uBAAGA,UAAU,4BAIrB,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,2BAGjB,uBAAGA,UAAU,QAAb,kCAA0B,uBAAGA,UAAU,+BACvC,uBAAGA,UAAU,QAAb,4BAAyB,uBAAGA,UAAU,+BACtC,uBAAGA,UAAU,QAAb,oBAAwB,uBAAGA,UAAU,+BACrC,yBAAKA,UAAU,cACX,uBAAGA,UAAU,6BAKzB,kBAACM,EAAD,SCjCG,aACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWC,IAC/B,kBAAC,IAAD,CAAUC,KAAK,IAAIT,GAAG,Y,MCMnBU,MAVf,WACE,OACE,yBAAKX,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,EAAD,SCEQY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ee60a9f2.chunk.js","sourcesContent":["import React from 'react'\nimport '../style/header.less'\nimport {Link} from 'react-router-dom'\n\nexport default class Header extends React.Component{\n\n    render(){\n\n        return(\n            <div className='header'>\n\n                <div className=\"logo\">\n                    <h1>Mr.c</h1>\n                </div>\n\n                <div className=\"navigation\">\n                    <div className=\"item\">\n                        <Link to='/home'>首页</Link>\n                    </div>\n                    <div className=\"item\">\n                        <Link to='/tag'>标签</Link>\n                    </div>\n                    <div className=\"item\">\n                        <Link to='/archive'>归档</Link>\n                    </div>\n                    <div className=\"item\">\n                        <Link to='/about'>关于</Link>\n                    </div>\n                </div>\n\n\n                <div className=\"search-conainer\">\n                    <div className=\"search\">\n                        <input type=\"text\" />\n                        <i className=\"iconfont icon-search\"/>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\n\n\n\nexport default function () {\n    return (\n        <div className=\"footer\">\n            <span className=\"content\">\n                <a href=\"http://www.beian.miit.gov.cn/\">陕ICP备17001208号-1</a>\n            </span>\n        </div>\n    )\n}\n","import React from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\nimport '../style/home.less'\n\nexport default function () {\n\n    return(\n        <div className='home'>\n            <Header/>\n            <section className='home-content'>\n\n                <div className=\"group\">\n                    <div className=\"group-name\">\n                        <i className=\"iconfont icon-jianpan\" />\n                    </div>\n\n                    <p className='name'>静下来，看看世界 <i className=\"iconfont icon-biji\" /></p>\n                    <p className='name'>留着空，急着走 <i className=\"iconfont icon-biji\" /></p>\n                    <p className='name'>间·洁 <i className=\"iconfont icon-biji\" /></p>\n                    <div className=\"more hover\">\n                        <i className=\"iconfont icon-gengduo\" />\n                    </div>\n                </div>\n\n                <div className=\"group second\">\n                    <div className=\"group-name\">\n                        <i className=\"iconfont icon-liebiao\" />\n                    </div>\n\n                    <p className='name'>世界的镜头 <i className=\"iconfont icon-fabugonglve\" /></p>\n                    <p className='name'>记录生活 <i className=\"iconfont icon-fabugonglve\" /></p>\n                    <p className='name'>静·动 <i className=\"iconfont icon-fabugonglve\" /></p>\n                    <div className=\"more hover\">\n                        <i className=\"iconfont icon-gengduo\" />\n                    </div>\n                </div>\n\n            </section>\n            <Footer/>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Route, Switch,Redirect} from 'react-router'\n\nimport Home from './views/Home'\n\n\nexport default function () {\n    return (\n        <Switch>\n            <Route path='/home' component={Home}/>\n            <Redirect from='/' to='/home' />\n        </Switch>\n    )\n}\n","import React from 'react';\nimport './App.less';\nimport Route from './router'\nimport { BrowserRouter } from 'react-router-dom'\nimport './icon/iconfont.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n            <Route/>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}